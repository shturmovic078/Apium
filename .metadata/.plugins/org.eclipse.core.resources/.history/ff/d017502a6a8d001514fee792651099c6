package com.appium.mobilebrowser;

import java.io.File;
import java.io.IOException;
import java.net.URL;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.concurrent.TimeUnit;

import io.appium.java_client.android.AndroidDriver;
import io.appium.java_client.ios.IOSDriver;

import org.apache.commons.io.FileUtils;
import org.openqa.selenium.By;
import org.openqa.selenium.Capabilities;
import org.openqa.selenium.OutputType;
import org.openqa.selenium.TakesScreenshot;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.remote.Augmenter;
import org.openqa.selenium.remote.DesiredCapabilities;
import org.testng.annotations.Test;



public class LauncChromeBrowser {
	 WebDriver driver;
	 public String browser_type;
	  public String fail,error,url,rotate;
	  public String baseUrl = "https://uat.charmin.com/en-us";
	  static String timeStamp = new SimpleDateFormat("yyyyMMdd_HHmmss").format(Calendar.getInstance().getTime());
	    int counter=1;
	    public String local=(new java.io.File("").getAbsolutePath());
		String data="" + local + "/" + "url.csv";	
		String data2="" + local + "/" + "url.csv";	
		String myTitle;
		String csvFileToRead;
		String browser = "iPhone5S_8_4";
		String name=""+ local +"/"+ browser+"/" +  counter + "_" + "Successful-Completed-Capture.png";
	@Test

	public void testLaunchBrowser() throws Exception{
		
		DesiredCapabilities caps = new DesiredCapabilities();
		 caps.setCapability("automationName", "Appium");
		 caps.setCapability("platformName", "Android");
		 caps.setCapability("platformVersion", "5.0");
		 caps.setCapability("deviceName", "PKT(Galaxy S5)");
		 caps.setCapability("appPackage", "com.sec.android.app.sbrowser");
		 caps.setCapability("appActivity", "SBrowserMainActivity");
		 
		AndroidDriver driver=new AndroidDriver(new URL("http://127.0.0.1:4723/wd/hub"), caps);
		driver.manage().timeouts().implicitlyWait(60, TimeUnit.SECONDS);
		
	     name="Charmin_Preference_Center_Login.png";
	        takeScreenPortrait(name);
	        System.out.println("Image Name " +name);
	     
	     
	     

   
   driver.manage().timeouts().implicitlyWait(450000, TimeUnit.SECONDS);
   driver.manage().timeouts().implicitlyWait(450000, TimeUnit.SECONDS);
   driver.findElement(By.id("phdesktopbody_0_submit")).click();
   
   driver.manage().timeouts().implicitlyWait(450000, TimeUnit.SECONDS);
   
   driver.manage().timeouts().implicitlyWait(450000, TimeUnit.SECONDS);
   driver.manage().timeouts().implicitlyWait(450000, TimeUnit.SECONDS);
   
   name="Charmin_Preference_Center_Login_Errors.png";
   takeScreenPortrait(name);
   System.out.println("I want to take a picture of the login errors" +name);
   System.out.println("I want to add username");
   
   driver.findElement(By.id("phdesktopbody_0_username")).click();
   driver.findElement(By.id("phdesktopbody_0_username")).sendKeys("albert.golubev@pkt.com");
   driver.findElement(By.id("phdesktopbody_0_password")).clear();
   driver.findElement(By.id("phdesktopbody_0_password")).sendKeys("zaq12wsx");
   driver.findElement(By.id("phdesktopbody_0_submit")).click();
   
   driver.manage().timeouts().implicitlyWait(450000, TimeUnit.SECONDS);
   
   driver.manage().timeouts().implicitlyWait(450000, TimeUnit.SECONDS);
   driver.manage().timeouts().implicitlyWait(450000, TimeUnit.SECONDS);
   
   name="Charmin_Preference_Center_Logged_In.png";
   takeScreenPortrait(name);
   System.out.println("Image Name " +name);
   
   
   driver.manage().timeouts().implicitlyWait(450000, TimeUnit.SECONDS);
   driver.manage().timeouts().implicitlyWait(450000, TimeUnit.SECONDS);
   
  
   
   driver.manage().timeouts().implicitlyWait(450000, TimeUnit.SECONDS);
   driver.manage().timeouts().implicitlyWait(450000, TimeUnit.SECONDS);

  
   counter+=1;
		
	}
	public WebDriver takeScreenPortrait(String name) throws IOException
	 {
		
		 WebDriver augmentedDriver = new Augmenter().augment(driver);
		//  System.out.println("Let me Rotate ");
//		((Rotatable)augmentedDriver).rotate(ScreenOrientation.PORTRAIT);
	     System.out.println("Let me take a screenshot " +name);
	     driver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);
	     System.out.println("I want to rotate");
	    
		    File screenshot = ((TakesScreenshot)augmentedDriver).getScreenshotAs(OutputType.FILE);
		  
		   // myTitle = driver.getTitle();
		    
		    
		    driver.manage().timeouts().implicitlyWait(450000, TimeUnit.SECONDS);
		    
		    driver.manage().timeouts().implicitlyWait(450000, TimeUnit.SECONDS);
		    
		    driver.manage().timeouts().implicitlyWait(450000, TimeUnit.SECONDS);
		    
		    driver.manage().timeouts().implicitlyWait(450000, TimeUnit.SECONDS);
		    FileUtils.copyFile(screenshot, new File(name));
		    
		    return driver;
	 }

}
